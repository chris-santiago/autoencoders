data:
  batch_size: 256
  n_workers: 10
  name: mnist
  train:
    _target_: torch.utils.data.DataLoader
    dataset:
      _target_: autoencoders.data.AutoEncoderDataset
      dataset:
        _target_: autoencoders.data.get_mnist_dataset
        train: true
    batch_size: ${data.batch_size}
    shuffle: true
    num_workers: ${data.n_workers}
  valid:
    _target_: torch.utils.data.DataLoader
    dataset:
      _target_: autoencoders.data.AutoEncoderDataset
      dataset:
        _target_: autoencoders.data.get_mnist_dataset
        train: false
    batch_size: ${data.batch_size}
    shuffle: false
    num_workers: ${data.n_workers}
model:
  optimizer:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 0.001
    betas:
    - 0.9
    - 0.999
    weight_decay: 0
  scheduler:
    _target_: torch.optim.lr_scheduler.CyclicLR
    _partial_: true
    base_lr: 0.001
    max_lr: 3.0
    cycle_momentum: false
  name: autoencoder
  nn:
    _target_: autoencoders.models.base.AutoEncoder
    layers:
    - 128
    - 64
    - 16
    input_shape:
    - 28
    - 28
    loss_func:
      _target_: torch.nn.MSELoss
trainer:
  _target_: pytorch_lightning.Trainer
  max_epochs: 100
  accelerator: mps
  devices: 1
  logger:
    _target_: pytorch_lightning.loggers.WandbLogger
    project: autoencoders
    name: null
    id: null
    group: null
    job_type: null
    save_dir: ${hydra:runtime.output_dir}
    log_model: true
    tags: ${tags}
callbacks:
  model_summary:
    _target_: pytorch_lightning.callbacks.RichModelSummary
  progress_bar:
    _target_: pytorch_lightning.callbacks.RichProgressBar
    refresh_rate: 5
    leave: true
  early_stopping:
    _target_: pytorch_lightning.callbacks.EarlyStopping
    monitor: train-loss
    min_delta: 0.001
    patience: 5
    check_on_train_epoch_end: true
  model_checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    dirpath: ${hydra:runtime.output_dir}/checkpoints
    monitor: train-loss
    save_top_k: 1
    save_on_train_epoch_end: true
  log_images:
    _target_: autoencoders.callbacks.LogReconstructedImagesCallback
tags:
- ${data.name}
- ${model.name}
